openapi: 3.0.0
info:
  title: Patient PSI API
  version: 1.0.0
  description: API documentation for the Patient PSI application

servers:
  - url: /api
    description: API base URL

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - email
        - password

    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - name
        - email
        - password

    ParticipantLoginRequest:
      type: object
      properties:
        participantId:
          type: string
      required:
        - participantId

    UserProfile:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [admin, therapist, participant]
        settings:
          type: object
          properties:
            theme:
              type: string
              enum: [light, dark]
            notifications:
              type: boolean
            language:
              type: string
        metadata:
          type: object
          additionalProperties: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - name
        - role

    Session:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        lastAccess:
          type: string
          format: date-time
        data:
          type: object
          additionalProperties: true
      required:
        - id
        - userId
        - createdAt
        - lastAccess

paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
                example: token=xyz; Path=/; HttpOnly; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  redirect:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/register:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Registration successful
          headers:
            Set-Cookie:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  redirect:
                    type: string
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/participant-login:
    post:
      summary: Participant login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantLoginRequest'
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  redirect:
                    type: string
                  participantName:
                    type: string
        '401':
          description: Invalid participant ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      summary: User logout
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Logout successful
          headers:
            Set-Cookie:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  redirect:
                    type: string

  /user/profile:
    get:
      summary: Get user profile
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Update user profile
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                settings:
                  type: object
                metadata:
                  type: object
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
