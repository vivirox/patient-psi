---
import { Checkbox } from '@/components/ui/checkbox';
import { Label } from '@/components/ui/label';

interface CheckboxItem {
  id: string;
  label: string;
}

interface Props {
  items: CheckboxItem[];
  name: string;
  title: string;
  description?: string;
}

const { items, name, title, description } = Astro.props;
---

<div class="space-y-3">
  <div class="flex flex-col gap-2">
    <Label class="text-base">{title}</Label>
    {description && <p class="text-sm text-muted-foreground">{description}</p>}
  </div>
  <div class="grid gap-3 pt-2">
    {items.map(item => (
      <div class="flex items-center space-x-3">
        <Checkbox id={`${name}-${item.id}`} name={name} value={item.id} />
        <Label htmlFor={`${name}-${item.id}`} class="text-sm font-normal">
          {item.label}
        </Label>
      </div>
    ))}
  </div>
</div>

<script>
  // Add any client-side checkbox handling logic here if needed
  document.addEventListener('astro:page-load', () => {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const event = new CustomEvent('checkboxChange', {
          detail: {
            name: target.name,
            value: target.value,
            checked: target.checked
          },
          bubbles: true
        });
        target.dispatchEvent(event);
      });
    });
  });
</script>
