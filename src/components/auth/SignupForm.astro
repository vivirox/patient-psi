---
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
---

<div class="mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]">
  <div class="flex flex-col space-y-2 text-center">
    <h1 class="text-2xl font-semibold tracking-tight">Create an account</h1>
    <p class="text-sm text-muted-foreground">Enter your details below to create your account</p>
  </div>
  <div class="grid gap-6">
    <form id="signup-form" class="grid gap-2">
      <div class="grid gap-1">
        <Label class="sr-only" htmlFor="name">Name</Label>
        <Input
          id="name"
          placeholder="Enter your name"
          type="text"
          name="name"
          autoComplete="name"
          required
        />
      </div>
      <div class="grid gap-1">
        <Label class="sr-only" htmlFor="email">Email</Label>
        <Input
          id="email"
          placeholder="name@example.com"
          type="email"
          name="email"
          autoCapitalize="none"
          autoComplete="email"
          autoCorrect="off"
          required
        />
      </div>
      <div class="grid gap-1">
        <Label class="sr-only" htmlFor="password">Password</Label>
        <Input
          id="password"
          placeholder="Create a password"
          type="password"
          name="password"
          autoComplete="new-password"
          required
        />
      </div>
      <div id="error-message" class="text-sm text-red-500 hidden"></div>
      <Button type="submit">Create Account</Button>
    </form>
    <div class="text-center text-sm">
      <a href="/login" class="text-primary hover:underline">Already have an account? Sign in</a>
    </div>
  </div>
</div>

<script>
  import { register } from '@/lib/auth-client';

  const form = document.getElementById('signup-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (errorMessage) {
      errorMessage.textContent = '';
      errorMessage.classList.add('hidden');
    }

    const formData = new FormData(form);
    try {
      await register({
        name: formData.get('name') as string,
        email: formData.get('email') as string,
        password: formData.get('password') as string,
      });
    } catch (error) {
      if (errorMessage) {
        errorMessage.textContent = error instanceof Error ? error.message : 'Failed to create account';
        errorMessage.classList.remove('hidden');
      }
    }
  });
</script>
